ultimoMesCalculo <- 34
meses    <- c(1:ultimoMesCalculo)
numeroAberturas  <- c(1,1,2,0,0,0,0,0,0,0      ## ano 1
,0,1,0,1,0,1,0,1,0,1,0,0  ## ano 2
,1,1,1,1,1,1,1,1,1,1,1,1) ## ano 3
faturamentoLojaMes <- matrix(nrow = sum(numeroAberturas),ncol=ultimoMesCalculo)
fatInicial        <- 70000
fatAmadurecimento <- 13000
fatMaximo         <- 200000
########################################
## percorre lojas
for (lojas in 1:sum(numeroAberturas)){
## encontra mês de abertura da loja
mesAtual <- 1
while ( ! lojas <= sum(numeroAberturas[1:mesAtual])){
mesAtual <- mesAtual + 1
}
mesAbertura <- mesAtual
## percorre meses e preenche matriz com venda por mês da loja
for (mes in mesAbertura:max(meses)){
faturamentoLojaMes[lojas,mes] <- fatInicial + ifelse(fatAmadurecimento*(mes-mesAbertura)>(fatMaximo-fatInicial)
,(fatMaximo-fatInicial)
,fatAmadurecimento*(mes-mesAbertura))
}
}
resultado <- list()
resultado[[1]] <- apply(faturamentoLojaMes,2,function(x)sum(x[!is.na(x)]))
resultado[[2]] <- resultado[[1]]*0.9
resultado[[3]] <- resultado[[1]]*0.1
## convert list to data frame
resDF <- ldply(resultado)
write.table(resDF,"c:/temp/teste.csv",sep=";",row.names = FALSE)
resultado
}
projetaFaturamento()
projetaFaturamento <- function(){
library(dplyr)
library(plyr)
## parâmetros
ultimoMesCalculo <- 34
meses    <- c(1:ultimoMesCalculo)
numeroAberturas  <- c(1,1,2,0,0,0,0,0,0,0      ## ano 1
,0,1,0,1,0,1,0,1,0,1,0,0  ## ano 2
,1,1,1,1,1,1,1,1,1,1,1,1) ## ano 3
faturamentoLojaMes <- matrix(nrow = sum(numeroAberturas),ncol=ultimoMesCalculo)
fatInicial        <- 70000
fatAmadurecimento <- 13000
fatMaximo         <- 200000
########################################
## percorre lojas
for (lojas in 1:sum(numeroAberturas)){
## encontra mês de abertura da loja
mesAtual <- 1
while ( ! lojas <= sum(numeroAberturas[1:mesAtual])){
mesAtual <- mesAtual + 1
}
mesAbertura <- mesAtual
## percorre meses e preenche matriz com venda por mês da loja
for (mes in mesAbertura:max(meses)){
faturamentoLojaMes[lojas,mes] <- fatInicial + ifelse(fatAmadurecimento*(mes-mesAbertura)>(fatMaximo-fatInicial)
,(fatMaximo-fatInicial)
,fatAmadurecimento*(mes-mesAbertura))
}
}
resultado <- list()
resultado[[1]] <- apply(faturamentoLojaMes,2,function(x)sum(x[!is.na(x)]))
resultado[[2]] <- resultado[[1]]*0.9
resultado[[3]] <- resultado[[1]]*0.1
## convert list to data frame
resDF <- ldply(resultado)
write.table(resDF,"c:/temp/teste.csv",sep=";",row.names = FALSE)
faturamentoLojaMes
}
projetaFaturamento()
airPollution <- read.csv("c:/rawdataad_viz_plotval_data.csv")
airPollution <- read.csv("c:/rawdata/ad_viz_plotval_data.csv")
airPollution
summary(airPollution)
head(airPollution)
summary(airPollution$Daily.Max.8.hour.CO.Concentration)
boxplot(airPollution$Daily.Max.8.hour.CO.Concentration,col="blue")
names(airPollution)
hist(airPollution$Daily.Max.8.hour.CO.Concentration,col="green")
boxplot(airPollution$Daily.Max.8.hour.CO.Concentration,col="blue")
hist(airPollution$Daily.Max.8.hour.CO.Concentration,col="green")
rug(irPollution$Daily.Max.8.hour.CO.Concentration)
rug(airPollution$Daily.Max.8.hour.CO.Concentration)
hist(airPollution$Daily.Max.8.hour.CO.Concentration,col="green", breaks=100)
boxplot(airPollution$Daily.Max.8.hour.CO.Concentration,col="blue")
abline(h=12)
abline(h=0.3)
abline(v=1)
abline(v=median(airPollution$Daily.Max.8.hour.CO.Concentration),col="magenta")
abline(v=median(airPollution$Daily.Max.8.hour.CO.Concentration),col="magenta")
abline(v=min(airPollution$Daily.Max.8.hour.CO.Concentration),col="magenta")
barplot(table(airPollution$Daily.Max.8.hour.CO.Concentration))
airPollution
boxplot(airPollution$Daily.Max.8.hour.CO.Concentration ~ airPollution$COUNTY, col="red")
hist(subset(airPollution,county="NEW YORK")$Daily.Max.8.hour.CO.Concentration,col="yellow")
hist(subset(airPollution,county!="NEW YORK")$Daily.Max.8.hour.CO.Concentration,col="yellow")
hist(subset(airPollution,county<>"NEW YORK")$Daily.Max.8.hour.CO.Concentration,col="yellow")
hist(subset(airPollution,county!="NEW YORK")$Daily.Max.8.hour.CO.Concentration,col="yellow")
hist(subset(airPollution,county="ALBANY")$Daily.Max.8.hour.CO.Concentration,col="yellow")
hist(subset(airPollution,county="NEW YORK")$Daily.Max.8.hour.CO.Concentration,col="yellow")
hist(subset(airPollution,county="ALBANY")$Daily.Max.8.hour.CO.Concentration,col="yellow")
par(mfrow=c(2,1), mar=c(4,4,2,1))
hist(subset(airPollution,county="NEW YORK")$Daily.Max.8.hour.CO.Concentration,col="yellow")
hist(subset(airPollution,county="ALBANY")$Daily.Max.8.hour.CO.Concentration,col="yellow")
with(airPollution,plot(airPollution$SITE_LATITUDE,airPollution$Daily.Max.8.hour.CO.Concentration))
with(airPollution,plot(airPollution$SITE_LATITUDE,airPollution$SITE_LONGITUDE))
abline(h=1)
with(airPollution,plot(airPollution$SITE_LATITUDE,airPollution$SITE_LONGITUDE,col=county))
with(airPollution,plot(airPollution$SITE_LATITUDE,airPollution$SITE_LONGITUDE,col=county))
with(airPollution,plot(airPollution$SITE_LATITUDE,airPollution$SITE_LONGITUDE,col=airPolltution$county))
with(airPollution,plot(airPollution$SITE_LATITUDE,airPollution$SITE_LONGITUDE,col=airPollution$county))
par(mfrow=c(1,2), mar=c(5,4,2,1))
with(airPollution,plot(airPollution$SITE_LATITUDE,airPollution$SITE_LONGITUDE,col=airPollution$county))
with(airPollution,plot(airPollution$SITE_LATITUDE,airPollution$SITE_LONGITUDE))
with(airPollution,plot(airPollution$SITE_LATITUDE,airPollution$SITE_LONGITUDE,col="blue"))
with(airPollution,plot(airPollution$SITE_LATITUDE,airPollution$SITE_LONGITUDE))
with(airPollution,plot(airPollution$SITE_LATITUDE,airPollution$Daily.Max.8.hour.CO.Concentration))
with(airPollution,plot(airPollution$SITE_LATITUDE,airPollution$SITE_LONGITUDE,col="blue"))
library(datasets)
data(cars)
data(cars)
with(cars,plot(speed,dist))
library(datasets)
data(cars)
with(cars,plot(speed,dist))
par(mfrow=c(1,1), mar=c(5,4,2,1))
with(cars,plot(speed,dist))
library(lattice)
state <- data.frame(state.x77, region=state.region)
xyplot(Life.Exp ~ Income | Region, data = state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout=c(4,1))
library(ggplot2)
data(mpg)
qplot(displ, hwy, data=mpg)
?parallel
?par
library(datasets)
hist(airquality$Ozone)
with(airquality, plot(Wind, Ozone))
airquality <- tranform(airquality, Mont=factor(Month))
airquality <- transform(airquality, Mont=factor(Month))
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone")
par(“lty”)
par("lty")
par("mar")
par("mfrow")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
with(subste(airquality, Month==5),points(Wind,Ozone,col="blue"))
with(subset(airquality, Month==5),points(Wind,Ozone,col="blue"))
with(subset(airquality, Month!=5),points(Wind,Ozone,col="red")) ## highlighting month of may
with(subset(airquality, Month==5),points(Wind,Ozone,col="blue"),type="n") ## highlighting month of may
directory <- "C:\RAWDATA\RMD1\RepData_PeerAssessment1"
directory <- "C:/RAWDATA/RMD1/RepData_PeerAssessment1"
train     <- read.csv("activity/train.csv"
,colClasses = c("numeric","Date","numeric")
,stringsAsFactors = FALSE)
setwd(directory)
train     <- read.csv("activity/train.csv"
,colClasses = c("numeric","Date","numeric")
,stringsAsFactors = FALSE)
train     <- read.csv("activity/activity.csv"
,colClasses = c("numeric","Date","numeric")
,stringsAsFactors = FALSE)
train
is.data.frame(train)
names(steps)
names(train)
library(dplyr)
steps %>%  group_by(date) %>% summarize(steps_per_day=sum(HP))
steps     <- read.csv("activity/activity.csv"
,colClasses = c("numeric","Date","numeric")
,stringsAsFactors = FALSE)
steps %>%  group_by(date) %>% summarize(steps_per_day=sum(HP))
steps %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
stepsdf     <- read.csv("activity/activity.csv"
,colClasses = c("numeric","Date","numeric")
,stringsAsFactors = FALSE)
%>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
stepsdf %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
stepsdf[date=="2012-10-08"]
stepsdf[stepsdf$date=="2012-10-08"]
stepsdf$date
stepsdf[stepsdf$date=="2012-10-08",]
names(stepdf)
names(stepsdf)
stepsdf %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
stepsdf[stepsdf$date=="2012-10-01",]
stepsdf %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
stepsdf <- filter(stepsdf, is.na(steps)==FALSE)
stepsdf %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
stepsdf %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
stepsdf %>%  group_by(date) %>% summarize(steps_per_day=mean(steps))
meanSteps   <- stepsdf %>%  group_by(date) %>% summarize(steps_per_day=mean(steps))
medianSteps <- stepsdf %>%  group_by(date) %>% summarize(steps_per_day=median(steps))
hist(meanSteps, medianSteps)
hist(meanSteps$steps_per_day,medianSteps$steps_per_day)
hist(meanSteps$steps_per_day)
hist(medianSteps$steps_per_day)
median(steps)
stepsdf %>%  group_by(date) %>% summarize(steps_per_day=median(steps))
median(c(1,2,3,2))
stepsdf$steps
median(stepsdf$steps[stepsdf$date=="2012-10-01",])
median(stepsdf$steps[stepsdf$date=="2012-10-01"])
median(stepsdf$steps[stepsdf$date=="2012-10-02"])
stepsdf$steps[stepsdf$date=="2012-10-02"]
median(stepsdf$steps[stepsdf$date=="2012-10-03"])
mean(stepsdf$steps[stepsdf$date=="2012-10-03"])
median(stepsdf$steps[stepsdf$date=="2012-10-03"])
median(stepsdf$steps[stepsdf$date=="2012-10-03"])
mean(stepsdf$steps[stepsdf$date=="2012-10-03"])
median(stepsdf$steps[stepsdf$date=="2012-10-04"])
mean(stepsdf$steps[stepsdf$date=="2012-10-04"])
median(stepsdf$steps[stepsdf$date=="2012-10-05"])
mean(stepsdf$steps[stepsdf$date=="2012-10-05"])
median(stepsdf$steps[stepsdf$date=="2012-10-06"])
mean(stepsdf$steps[stepsdf$date=="2012-10-06"])
median(stepsdf$steps[stepsdf$date=="2012-10-07"])
mean(stepsdf$steps[stepsdf$date=="2012-10-07"])
totalSteps   <- stepsdf %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
totalSteps
hist(totalSteps$steps_per_day)
meanSteps   <- mean(totalSteps$steps_per_day)
medianSteps <- median(totalSteps$steps_per_day)
meanSteps
medianSteps
names(stepsdf)
dailyPattern   <- stepsdf %>%  group_by(interval) %>% summarize(steps_per_day=mean(steps))
dailyPattern
dailyPatternTS <- ts(dailyPattern)
dailyPatternTS
plot(dailyPatternTS)
plot(dailyPatternTS,type="1")
tsplot(dailyPatternTS)
plot(dailyPatternTS)
plot(dailyPatternTS$steps)
dailyPatternTS
plot(dailyPattern$interval,dailyPattern$steps_per_day)
dailyPattern   <- stepsdf %>%  group_by(interval) %>% summarize(steps_per_day=mean(steps))
dailyPatternTS <- ts(dailyPattern)
plot(dailyPattern$interval
,dailyPattern$steps_per_day
,xlab="Interval"
,ylab="Average steps"
,xaxt="n"
,type="n") ## wait to plot, clear plot)
lines(dailyPattern$interval
,dailyPattern$steps_per_day
,lwd=1)
plot(dailyPattern$interval
,dailyPattern$steps_per_day
,xlab="Interval"
,ylab="Average steps"
,type="n") ## wait to plot, clear plot)
lines(dailyPattern$interval
,dailyPattern$steps_per_day
,lwd=1)
stepsdf_orig<- read.csv("activity/activity.csv"
,colClasses = c("numeric","Date","numeric")
,stringsAsFactors = FALSE)
is.na(stepsdf_orig$steps)
sum(is.na(stepsdf_orig$steps))
totalNAs <- sum(is.na(stepsdf_orig$steps))
stepsdf_orig[is.na(stepsdf_orig$steps)==TRUE)]
stepsdf_orig[is.na(stepsdf_orig$steps)==TRUE),]
is.na(stepsdf_orig$steps)
stepsdf_orig[is.na(stepsdf_orig$steps),]
stepsdf_orig$steps[is.na(stepsdf_orig$steps)]
fillin <- stepsdf_orig[is.na(stepsdf_orig$steps),]
fillin
fillin %>% mutate(fill_value=dailyPattern$steps[dailyPattern$interval==interval])
names(fillin)
dailyPattern$steps[dailyPattern$interval==fillin$interval]
summary(fillin)
summary(dailyPattern)
i <- 1
dailyPattern$steps_per_day[fillin$interval[i]]
fillin$interval[i]
head(fillin)
i<-2I
i<-2
fillin$interval[i]
dailyPattern$steps_per_day[fillin$interval[i]]
i<-2I
i <- 1
dailyPattern$steps_per_day[fillin$interval[i]]
fillin$interval[i]
head(stepsdf_orig)
stepsdf_orig[interval==0]
stepsdf_orig$steps[interval==0]
stepsdf_orig$steps[stepsdf_orig$interval==0]
head(dailyPattern)
fillin$interval[i]
dailyPattern$steps_per_day[dailyPattern$steps_per_day==fillin$interval[i]]
fillin$interval[i]
fillin$steps[i] <- dailyPattern$steps_per_day[dailyPattern$interval==fillin$interval[i]]
dailyPattern$steps_per_day[dailyPattern$interval==fillin$interval[i]]
sum(is.na(stepsdf_orig$steps))
for (i in 1:rownum(stepsdf_orig)){
if (is.na(stepsdf_orig$steps)){
stepsdf_orig$steps[i] <- dailyPattern$steps_per_day[dailyPattern$interval==stepsdf_orig$interval[i]]
}
}
for (i in 1:nrow(stepsdf_orig)){
if (is.na(stepsdf_orig$steps)){
stepsdf_orig$steps[i] <- dailyPattern$steps_per_day[dailyPattern$interval==stepsdf_orig$interval[i]]
}
}
sum(is.na(stepsdf_orig$steps))
for (i in 1:nrow(stepsdf_orig)){
if (is.na(stepsdf_orig$steps[i])){
stepsdf_orig$steps[i] <- dailyPattern$steps_per_day[dailyPattern$interval==stepsdf_orig$interval[i]]
}
}
totalNAs <- sum(is.na(stepsdf_orig$steps))
totalNAs
totalSteps2  <- stepsdf_orig %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
meanSteps   <- mean(totalSteps2$steps_per_day)
medianSteps <- median(totalSteps2$steps_per_day)
diffMeanSteps   <- meanSteps2   - meanSteps
meanSteps2   <- mean(totalSteps2$steps_per_day)
medianSteps2 <- median(totalSteps2$steps_per_day)
diffMeanSteps   <- meanSteps2   - meanSteps
diffMedianSteps <- medianSteps2 - medianSteps
### What is the impact of imputing missing data on the estimates of the total daily number of steps?
## Are there differences in activity patterns between weekdays and weekends?
weekdays(head(stepsdf_orig$date))
weekday(head(stepsdf_orig$date))
weekdays(head(stepsdf_orig$date))
weekdays(head(stepsdf_orig$date),abbreviate = TRUE)
as.POSIXlt(head(stepsdf_orig$date)$wday
as.POSIXlt(head(stepsdf_orig$date))$wday
as.POSIXlt(head(stepsdf_orig$date))$wday
cut2(as.POSIXlt(head(date))$wday,g<=5)
library(Hmisc)
cut2(as.POSIXlt(head(date))$wday,g<=5)
cut2(as.POSIXlt(date)$wday,g<=5)
cut2(as.POSIXlt(stepsdf_orig$date)$wday,g<=5)
cut2(as.POSIXlt(stepsdf_orig$date)$wday<=5)
cut(as.POSIXlt(stepsdf_orig$date)$wday,breaks=c(1,6))
cut(as.POSIXlt(stepsdf_orig$date)$wday,breaks=(1,6))
cut(as.POSIXlt(stepsdf_orig$date)$wday,breaks=c(1,6))
stepsdf_orig <- mutate(stepsdf_orig, weekend=cut(as.POSIXlt(stepsdf_orig$date)$wday,breaks=c(1:5,6:7)))
cut(as.POSIXlt(stepsdf_orig$date)$wday,breaks=c(1:5,6:7))
cut(as.POSIXlt(stepsdf_orig$date)$wday,breaks=c(1,6,7))
cut(as.POSIXlt(stepsdf_orig$date)$wday,breaks=c(1,6,8))
as.POSIXlt(stepsdf_orig$date)$wday
cut(ifelse(as.POSIXlt(stepsdf_orig$date)$wday
,0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
,breaks=c(1,6,7)
)
ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
,breaks=c(1,6,7)
)
ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
cut(ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
,breaks=c(1,6,7)
)
ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
,breaks=c(1,6,8)
)
cut(ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
,breaks=c(1,6,8)
)
cut(ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
,breaks=c(0,6,8)
)
summary(cut(ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
,breaks=c(0,6,8)
))
labels<-c("weekday","weekend")
cut(ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
,breaks=c(0,6,8)
,labels = labs
)
cut(ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
,breaks=c(0,6)
,labels = labs
)
labs<-c("weekday","weekend")
cut(ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
,breaks=c(0,6)
,labels = labs
)
cut(ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
,breaks=c(0,6,8)
,labels = labs
)
stepsdf_orig <- mutate(stepsdf_orig
,weekend=cut(ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0
,7
,as.POSIXlt(stepsdf_orig$date)$wday)
,breaks=c(0,6,8)
,labels = labs
)
)
summary(stepsdf_orig)
summary(stepsdf_orig)
weekend=cut(ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0 ## transforms sunday to 7
,7                                     ## to make it easier to
,as.POSIXlt(stepsdf_orig$date)$wday)   ## break
,breaks=c(0,6,8)
)
weekend
library(ggplot2)
dailyPatternWeek <- stepsdf %>%  group_by(interval,weekend) %>% summarize(steps_per_day=mean(steps))
dailyPatternWeek <- stepsdf_orig %>%  group_by(interval,weekend) %>% summarize(steps_per_day=mean(steps))
names(dailyPatternWeek)
names(stepsdf_orig)
stepsdf_orig %>%  group_by(interval,weekend) %>% summarize(steps_per_day=mean(steps))
dailyPatternWeek <- stepsdf_orig %>%  group_by(weekend) %>% summarize(steps_per_day=mean(steps))
names(stepsdf_orig)
dailyPattern   <- stepsdf %>%  group_by(interval) %>% summarize(steps_per_day=mean(steps))
library(dplyr)
dailyPatternWeek <- stepsdf_orig %>%  group_by(weekend) %>% summarize(steps_per_day=mean(steps))
dailyPattern   <- stepsdf %>%  group_by(interval) %>% summarize(steps_per_day=mean(steps))
dailyPatternWeek <- stepsdf_orig %>%  group_by(weekend) %>% summarize(steps_per_day=mean(steps))
stepsdf_orig %>%  group_by(weekend) %>% summarize(steps_per_day=mean(steps))
stepsdf_orig <- mutate(stepsdf_orig
,weekend=cut(ifelse(as.POSIXlt(stepsdf_orig$date)$wday==0 ## transforms sunday to 7
,7                                     ## to make it easier to
,as.POSIXlt(stepsdf_orig$date)$wday)   ## break
,breaks=c(0,6,8)
,labels = labs
)
)
directory <- "C:/RAWDATA/RMD1/RepData_PeerAssessment1"
setwd(directory)
stepsdf_orig<- read.csv("activity/activity.csv"
,colClasses = c("numeric","Date","numeric")
,stringsAsFactors = FALSE)
stepsdf     <- filter(stepsdf_orig, is.na(steps)==FALSE)
totalSteps  <- stepsdf %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
meanSteps   <- mean(totalSteps$steps_per_day)
medianSteps <- median(totalSteps$steps_per_day)
hist(totalSteps$steps_per_day)
library(Hmisc)
library(ggplot2)
library(dplyr)
totalSteps  <- stepsdf %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
directory <- "C:/RAWDATA/RMD1/RepData_PeerAssessment1"
setwd(directory)
stepsdf_orig<- read.csv("activity/activity.csv"
,colClasses = c("numeric","Date","numeric")
,stringsAsFactors = FALSE)
stepsdf     <- filter(stepsdf_orig, is.na(steps)==FALSE)
totalSteps  <- stepsdf %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
meanSteps   <- mean(totalSteps$steps_per_day)
medianSteps <- median(totalSteps$steps_per_day)
totalSteps
stepsdf %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
stepsdf     <- filter(stepsdf_orig, is.na(steps)==FALSE)
names(stepsdf)
totalSteps  <- stepsdf %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
library(dplyr)
totalSteps  <- stepsdf %>%  group_by(date) %>% summarize(steps_per_day=sum(steps))
totalSteps  <- stepsdf %>%  group_by(stepsdf$date) %>% summarize(steps_per_day=sum(steps))
stepsdf$date
totalSteps  <- stepsdf %>%  group_by(stepsdf$date) %>% summarize(steps_per_day=sum(stepsdf$steps))
names(dailyPatternWeek)
plot(dailyPattern$interval
,dailyPattern$steps_per_day
,xlab="Interval"
,ylab="Average steps"
,title="Average daily activity pattern"
,type="n") ## wait to plot, clear plot)
lines(dailyPattern$interval
,dailyPattern$steps_per_day
,lwd=1)
dailyPattern   <- stepsdf %>%  group_by(interval) %>% summarize(steps_per_day=mean(steps))
library(Hmisc)
library(ggplot2)
library(dplyr)
## eliminate scientific notation
options(scipen=999)
library(knitr)
directory <- "C:/RAWDATA/RMD1/RepData_PeerAssessment1"
setwd(directory)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
directory
knit2html("PA1_template.Rmd")
